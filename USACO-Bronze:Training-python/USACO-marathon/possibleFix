use if statement with two arguments, one that checks the net difference from target (if last case is [10, 0], then [5, 5] is 10 away while [-10, 0] is 20 away) and one that checks the total number of moves so far (if last case is [10, 0], then [5, 5] is 10 while [20, 0] is 20. Go through every element in overalLst and process whichever element produces a) the highest number in the first case and b) in the case of a tie, the highest number in the second case
